#!/bin/bash
# 96-install-utilities
#
#  This script install and configure vim, bashrc, profile and other utilities in the
#  installation.
#

info " Configure utilities "

# install and configure vim
install_package vim

## configure vim
cat <<VIM_EOF > /etc/vim/vimrc

runtime! debian.vim
 
if has("syntax")
  syntax on
endif
 
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
 
if has("autocmd")
  filetype plugin indent on
endif
 
 
set showmatch       " Show matching brackets.
set ignorecase      " Do case insensitive matching
set incsearch       " Incremental search
set mouse=a         " Enable mouse usage (all modes)
set number          " Mostrar los números de línea
set textwidth=80    " Fijar ancho de línea en 80 caracteres
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab
 
"set showcmd        " Show (partial) command in status line.
"set smartcase      " Do smart case matching
"set autowrite      " Automatically save before commands like :next and :make
"set hidden         " Hide buffers when they are abandoned
 
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif
VIM_EOF

# configure vimrc.local
cat <<VIMRC_EOF > /etc/vim/vimrc.local

" Environment {
    " Basics {
        set nocompatible        " must be first line
        set background=dark     " Assume a dark background
    " }
" }

" General {
        syntax on
if has("autocmd")
  filetype plugin indent on
endif
    set viewoptions=folds,options,cursor,unix,slash " better unix / windows compatibility
    set history=1000                " Store a ton of history (default is 20)
    " }
" }

" Vim UI {
    if has('cmdline_info')
        set ruler                   " show the ruler
        set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
        set showcmd                 " show partial commands in status line and
                                    " selected characters/lines in visual mode
    endif
    set showmatch                   " show matching brackets/parenthesis
    set incsearch                   " find as you type search
" }

" Formatting {
    set nowrap                      " wrap long lines
    set autoindent                  " indent at the same level of the previous line
    set shiftwidth=4                " use indents of 4 spaces
    set expandtab                   " tabs are spaces, not tabs
    set tabstop=4                   " an indentation every four columns
    set softtabstop=4               " let backspace delete indent
    "set matchpairs+=<:>            " match, to be used with %
    set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)
    "set comments=sl:/*,mb:*,elx:*/  " auto format comment blocks
    " Remove trailing whitespaces and ^M chars
    autocmd FileType c,cpp,java,php,js,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
" }

" Use local vimrc if available {
    if filereadable(expand("~/.vimrc.local"))
        source ~/.vimrc.local
    endif
" }
VIMRC_EOF

# install and configure bash_completion
install_package bash-completion

## enable bash-completion
# sed -i '/^#if ! shopt -oq posix; then$/,+6s/# / /' /etc/bash.bashrc
sed -i '/#if ! shopt.*$/,+6s/#//' /etc/bash.bashrc

if [ -z "`grep 'enable bash-completion' /etc/profile`" ]; then
cat <<PROFILE_EOF >> /etc/profile

# enable bash-completion
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

PROFILE_EOF
fi

# configure bash.bashrc
## configure bashrc
sed -i 's/^#force_color_prompt=.*$/force_color_prompt=yes/' /etc/skel/.bashrc
# enable colors in bash
sed -i "s/^# export LS_OPTIONS=.*$/export LS_OPTIONS='--color=auto'/" /root/.bashrc
sed -i '/^# eval "`dircolors`"/eval "`dircolors`"/' /root/.bashrc
sed -i '/# alias ls.*$/,+3s/# //' /root/.bashrc

if [ -z "`grep 'history options' /etc/bash.bashrc`" ]; then
cat <<EOF >> /etc/bash.bashrc
# history options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
force_color_prompt=yes
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias egrep='egrep --color=auto'
fi
EOF
fi

# configure GIT
install_package git-core
/usr/bin/git config --global user.name "$ACCOUNT"
/usr/bin/git config --global user.email "$MAIL"

# filesystem tools
install_package xfsprogs btrfs-tools dosfstools ntfs-3g cifs-utils

##########################################
#
# basic programming languages
#
install_package ${prefix} perl-modules python-minimal python-pip python-setuptools ruby rubygems php5-cli

# secure php5-cli
sed -i 's/^register_globals \= On/register_globals \= Off/' /etc/php5/cli/php.ini
echo 'register_globals = Off' >> /etc/php5/cli/php.ini
sed -i 's/^expose_php \= On/expose_php \= Off/' /etc/php5/cli/php.ini
sed -i 's/^allow_url_fopen \= On/allow_url_fopen \= Off/' /etc/php5/cli/php.ini
sed -i 's/^zlib.output_compression \= Off/zlib.output_compression \= On/' /etc/php5/cli/php.ini

# install locate
install_package locate

warning "update locate database, please wait ..."
updatedb
